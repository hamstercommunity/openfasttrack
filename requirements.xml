<?xml version="1.0" encoding="UTF-8"?>
<specdocument>
  <specobjects doctype="feat">
    <specobject>
      <id>requirement-tracing</id>
      <version>1</version>
      <shortdesc>Requirement Tracing</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>60</sourceline>
      <description>OFT traces requirements from specification to any kind of coverage (document, implementation, test, etc.).</description>
      <coverage>
        <needscoverage>
          <needsobj>req</needsobj>
        </needscoverage>
        <shallowCoverageStatus>COVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects>
          <coveringSpecObject>
            <id>tracing.outgoing-coverage-link-status</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>tracing.incoming-coverage-link-status</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>tracing.deep-coverage</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>tracing.duplicate-items</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>tracing.defect-items</id>
            <version>2</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>tracing.link-cycle</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>include-only-artifact-types</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>include-items-where-at-least-on-tag-matches</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>include-items-that-do-not-have-tags-or-where-at-least-one-tag-matches</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.tracing.command</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.tracing.output-format</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.tracing.default-output-format</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.tracing.exit-status</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
        </coveringSpecObjects>
        <coveredTypes>
          <coveredType>req</coveredType>
        </coveredTypes>
      </coverage>
    </specobject>
    <specobject>
      <id>markdown-import</id>
      <version>1</version>
      <shortdesc>Markdown Import</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>67</sourceline>
      <description>OFT imports specification items from Markdown files.</description>
      <rationale>Markdown is a clean an simple format that:

* is viewable with any text editor
* focuses on content instead of layout
* is portable across platforms
* easy to process with text manipulation tools

For those reasons Markdown is a suitable candidate for writing specification that can be read and
maintained over a long time.</rationale>
      <coverage>
        <needscoverage>
          <needsobj>req</needsobj>
        </needscoverage>
        <shallowCoverageStatus>COVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects>
          <coveringSpecObject>
            <id>forwarding_needed_coverage</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>markdown-standard-syntax</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>markdown-outline-readable</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>eb-markdown</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>artifact-type-forwarding-in-markdown</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.input-directory-selection</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.default-input</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
        </coveringSpecObjects>
        <coveredTypes>
          <coveredType>req</coveredType>
        </coveredTypes>
      </coverage>
    </specobject>
    <specobject>
      <id>reqm2-import</id>
      <version>1</version>
      <shortdesc>ReqM2 Import</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>86</sourceline>
      <description>OFT imports specification items from ReqM2 files.</description>
      <rationale>One of the OpenFastTrace design goals is to provide a Java-based drop-in replacement for ReqM2, so file format compatibility is essential.</rationale>
      <coverage>
        <needscoverage>
          <needsobj>req</needsobj>
        </needscoverage>
        <shallowCoverageStatus>COVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects>
          <coveringSpecObject>
            <id>cli.input-directory-selection</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.default-input</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
        </coveringSpecObjects>
        <coveredTypes>
          <coveredType>req</coveredType>
        </coveredTypes>
      </coverage>
    </specobject>
    <specobject>
      <id>coverage-tag-import</id>
      <version>1</version>
      <shortdesc>Coverage Tag Import</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>97</sourceline>
      <description>OFT imports coverage tags from source code files.</description>
      <rationale>Coverage tags indicate parts of the source code that implements a certain requirement.</rationale>
      <coverage>
        <needscoverage>
          <needsobj>req</needsobj>
        </needscoverage>
        <shallowCoverageStatus>COVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects>
          <coveringSpecObject>
            <id>import.full-coverage-tag-format</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>import.short-coverage-tag-format</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
        </coveringSpecObjects>
        <coveredTypes>
          <coveredType>req</coveredType>
        </coveredTypes>
      </coverage>
    </specobject>
    <specobject>
      <id>reqm2-export</id>
      <version>1</version>
      <shortdesc>ReqM2 Export</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>108</sourceline>
      <description>OFT exports specification items to ReqM2 files.</description>
      <rationale>One of the OpenFastTrace design goals is to provide a Java-based drop-in replacement for ReqM2, so file format compatibility is essential.</rationale>
      <coverage>
        <needscoverage>
          <needsobj>req</needsobj>
        </needscoverage>
        <shallowCoverageStatus>COVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects>
          <coveringSpecObject>
            <id>conversion.reqm2-export</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.conversion.command</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.conversion.output-format</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.conversion.default-output-format</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.newline-format</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.default-newline-format</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
        </coveringSpecObjects>
        <coveredTypes>
          <coveredType>req</coveredType>
        </coveredTypes>
      </coverage>
    </specobject>
    <specobject>
      <id>plain-text-report</id>
      <version>1</version>
      <shortdesc>Plain Text Report</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>123</sourceline>
      <description>OFT produces a tracing report in plain text.</description>
      <rationale>This can be read directly as console output or with any text editor.</rationale>
      <coverage>
        <needscoverage>
          <needsobj>req</needsobj>
        </needscoverage>
        <shallowCoverageStatus>COVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects>
          <coveringSpecObject>
            <id>reporting.requirement-origin</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>reporting.plain-text.summary</id>
            <version>2</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>reporting.plain-text.specification-item-overview</id>
            <version>2</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>reporting.plain-text.link-details</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
        </coveringSpecObjects>
        <coveredTypes>
          <coveredType>req</coveredType>
        </coveredTypes>
      </coverage>
    </specobject>
    <specobject>
      <id>html-report</id>
      <version>1</version>
      <shortdesc>HTML Report</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>134</sourceline>
      <description>OFT produces a tracing report in Hypertext markup language (HTML).</description>
      <rationale>This report type is more optically appealing than the plain text report and still widely supported on all platforms.</rationale>
      <coverage>
        <needscoverage>
          <needsobj>req</needsobj>
        </needscoverage>
        <shallowCoverageStatus>COVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects>
          <coveringSpecObject>
            <id>reporting.requirement-origin</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>reporting.html.single_file</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
        </coveringSpecObjects>
        <coveredTypes>
          <coveredType>req</coveredType>
        </coveredTypes>
      </coverage>
    </specobject>
    <specobject>
      <id>command-line-interface</id>
      <version>1</version>
      <shortdesc>Command Line Interface</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>147</sourceline>
      <description>OFT offers a command line interface.</description>
      <rationale>Running traces automatically in a scripted environment is the most important use case.</rationale>
      <coverage>
        <needscoverage>
          <needsobj>req</needsobj>
        </needscoverage>
        <shallowCoverageStatus>COVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects>
          <coveringSpecObject>
            <id>cli.tracing.command</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.tracing.output-format</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.tracing.default-output-format</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.conversion.command</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.conversion.output-format</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.conversion.default-output-format</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.input-selection</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.input-directory-selection</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.default-input</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.newline-format</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
          <coveringSpecObject>
            <id>cli.default-newline-format</id>
            <version>1</version>
            <doctype>req</doctype>
            <status>approved</status>
            <ownCoverageStatus>UNCOVERED</ownCoverageStatus>
            <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
            <coveringStatus>UNCOVERED</coveringStatus>
          </coveringSpecObject>
        </coveringSpecObjects>
        <coveredTypes>
          <coveredType>req</coveredType>
        </coveredTypes>
      </coverage>
    </specobject>
  </specobjects>
  <specobjects doctype="req">
    <specobject>
      <id>specification-item</id>
      <version>2</version>
      <shortdesc>Specification Item</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>162</sourceline>
      <description>A specification item consists of the following parts:

* ID
* Title (optional)
* Status (optional)
* Description (optional)
* Rationale (optional)
* Comment (optional)
* Covers (optional)
* Depends (optional)
* Needs (optional)
* Tags (optional)

The ID is a unique key through which the specification item can be referenced. It also contains the specification item type and revision number.

The title is a short summary of the specification item, mostly intended to appear in overview lists.

The status of the item is one of "approved", "proposed", "draft" and "rejected".

The description contains the normative part of the specification.

The rationale explains the reasoning behind a requirement or decision.

The "Covers" section contains a list of all specification item IDs that are covered by this item.

The "Depends" section contains a list of all specification item IDs that must be implemented in order for this item to be complete.

The "Needs" section list all artifact item types in which coverage for this item must be provided.

Tags are a way to label an artifact intended for grouping.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
    </specobject>
    <specobject>
      <id>forwarding_needed_coverage</id>
      <version>1</version>
      <shortdesc>Forwarding Needed Coverage</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>198</sourceline>
      <description>OFT allows users to forward needed coverage from one artifact type to one or more different types.</description>
      <rationale>Often a system requirement does not affect the high-level architecture. In this case it is convenient for the architect to hand it down to lower levels directly.</rationale>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>markdown-import</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>markdown-standard-syntax</id>
      <version>1</version>
      <shortdesc>Markdown Standard Syntax</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>225</sourceline>
      <description>The OFT Markdown specification artifact format uses the standard markdown syntax without proprietary extensions.</description>
      <rationale>The specification documents that the OFT Markdown importer reads must be viewable with any regular Markdown reader and as plain text.</rationale>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>markdown-import</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>markdown-outline-readable</id>
      <version>1</version>
      <shortdesc>Markdown Outline Readable</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>240</sourceline>
      <description>The Markdown outline -- a table of contents created from the heading structure by various Markdown editors -- must be human readable.</description>
      <rationale>In long specification document the outline is the primary means of navigating the document. Only if the outline can be read easily, it is useful for authoring specification documents.</rationale>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>markdown-import</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>eb-markdown</id>
      <version>1</version>
      <shortdesc>Support for EB Markdown Requirements</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>255</sourceline>
      <description>In addition to OFT's requirement-enhanced markdown syntax OFT also supports Elektrobit's variant.</description>
      <rationale>This allows stepwise migration to the OFT standard format. The Elektrobit format is a little bit closer to ReqM2.</rationale>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>markdown-import</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>artifact-type-forwarding-in-markdown</id>
      <version>1</version>
      <shortdesc>Artifact Type Forwarding in Markdown</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>270</sourceline>
      <description>The Markdown format features a compact way to forward a requirement from the artifact type that was originally required to one or more different artifact types.</description>
      <rationale>Often a system requirement does not affect the high-level architecture. In this case it is convenient for the architect to hand it down to lower levels directly.</rationale>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>markdown-import</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>import.full-coverage-tag-format</id>
      <version>1</version>
      <shortdesc>Import Full Coverage Tag Format</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>289</sourceline>
      <description>OFT imports coverage tags from source files in a full format that contains all necessary information for tracing.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>coverage-tag-import</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>import.short-coverage-tag-format</id>
      <version>1</version>
      <shortdesc>Import Short Coverage Tag Format</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>300</sourceline>
      <description>OFT imports coverage tags from source files in a short format that requires additional configuration during import.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>coverage-tag-import</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>tracing.outgoing-coverage-link-status</id>
      <version>1</version>
      <shortdesc>Outgoing Coverage Link Status</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>313</sourceline>
      <description>_Outgoing coverage link_ means links that originate from a specification item and end at another specification item.
OFT determines the status of an outgoing coverage link of a specification item.

The possible results are:

  1. Covers:    link points to a specification item which wants this coverage
  2. Outdated:  link points to a specification item which has a higher revision number
  3. Predated:  link points to a specification item which has a lower revision number
  4. Ambiguous: link points to a specification item that has duplicates
  5. Unwanted:  coverage provider has an artifact type the provider does not want
  6. Orphaned:  link is broken - there is no matching coverage requester</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>requirement-tracing</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>tracing.incoming-coverage-link-status</id>
      <version>1</version>
      <shortdesc>Incoming Coverage Link Status</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>334</sourceline>
      <description>_Incoming coverage link_ means links that end at a specification item and originate at another specification item
OFT determines the incoming coverage link status of a requirement.

The possible results are:

  1. Covered shallow:  coverage provider for a required coverage exists
  2. Covered unwanted: coverage provider covers an artifact type the requester does not want
  3. Covered predated: coverage provider covers a higher revision number than the requester has
  4. Covered outdated: coverage provider covers a lower revision number than the requester has</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>requirement-tracing</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>tracing.deep-coverage</id>
      <version>1</version>
      <shortdesc>Deep Coverage</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>353</sourceline>
      <description>OFT marks a specification item as _covered deeply_ if this item - and all items it needs coverage from - are covered recursively.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>requirement-tracing</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>tracing.duplicate-items</id>
      <version>1</version>
      <shortdesc>Duplicate Items</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>364</sourceline>
      <description>OFT marks a specification item as _duplicate_ if other items with the same ID exist.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>requirement-tracing</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>tracing.defect-items</id>
      <version>2</version>
      <shortdesc>Defect Items</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>375</sourceline>
      <description>OFT marks a specification item as _defect_ if the following criteria apply

* The specification item has duplicates (i.e. another specification item with the same ID exists) _or_
* The item has any other status than "rejected" _and any of_
  * At least one outgoing coverage link has a different status than "Covers"
  * The item is not covered deeply</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>requirement-tracing</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>tracing.link-cycle</id>
      <version>1</version>
      <shortdesc>Link Cycle</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>391</sourceline>
      <description>OFT detects if specification items are linked in a cycle.</description>
      <rationale>Link cycles are never intended and hard to find by hand in large collections of requirements.</rationale>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>requirement-tracing</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>include-only-artifact-types</id>
      <version>1</version>
      <shortdesc>Include Only Artifact Types</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>418</sourceline>
      <description>OFT gives users the option to include only a configurable set of artifact types during processing.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>requirement-tracing</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>include-items-where-at-least-on-tag-matches</id>
      <version>1</version>
      <shortdesc>Include Items Where at Least One Tag Matches</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>429</sourceline>
      <description>OFT gives users the option to include only specification items that have at least one tag from a configurable set of tags during processing.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>requirement-tracing</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>include-items-that-do-not-have-tags-or-where-at-least-one-tag-matches</id>
      <version>1</version>
      <shortdesc>Include Items That Don't Have Tags Or Where at Least One Tag Matches </shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>440</sourceline>
      <description>OFT gives users the option to include only specification items that either do not have tags or have at least one tag from a configurable set of tags during processing.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>requirement-tracing</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>reporting.requirement-origin</id>
      <version>1</version>
      <shortdesc>Requirement Origin in Report</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>456</sourceline>
      <description>Users can choose to display the requirement origin (e.g. file and line number) in reports:

* In the body of a specification item
* For each link to a specification item</description>
      <rationale>This is especially useful for debugging since it makes finding broken sources faster.</rationale>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>plain-text-report</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
        <coveredType>
          <id>html-report</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>reporting.plain-text.summary</id>
      <version>2</version>
      <shortdesc>Plain Text Report Summary</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>481</sourceline>
      <description>The summary in the plain text report includes:

* Result status
* Total number of specification items
* Total number of defect specification items (if any)</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>plain-text-report</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>reporting.plain-text.specification-item-overview</id>
      <version>2</version>
      <shortdesc>Plain Text Report Specification Item Overview</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>496</sourceline>
      <description>An item summary consist in the plain text report includes

  1. Status
  2. Number of broken incoming links
  3. Total number of incoming links
  4. Number of broken outgoing links
  5. Total number of outgoing links
  6. Number of duplicates (not including this item)
  7. ID
  8. Status (unless "approved")
  9. Artifact types indicating coverage</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>plain-text-report</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>reporting.plain-text.link-details</id>
      <version>1</version>
      <shortdesc>Plain Text Report Link Details</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>517</sourceline>
      <description>The link detail section shows for all links of a specification item:

  1. Incoming / Outgoing
  2. Link status
  3. ID of the specification item on the other end of the link</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>plain-text-report</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>reporting.html.single_file</id>
      <version>1</version>
      <shortdesc>HTML Report is a Single File</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>534</sourceline>
      <description>OFT creates the HTML Report as a single file.</description>
      <rationale>It makes exchanging reports with other people easier if everything is contained in a single file.</rationale>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>html-report</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>conversion.reqm2-export</id>
      <version>1</version>
      <shortdesc>ReqM2 Export</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>554</sourceline>
      <description>OFT exports to ReqM2's "SpecObject" format.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>reqm2-export</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>cli.tracing.command</id>
      <version>1</version>
      <shortdesc>Requirement Tracing Command</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>569</sourceline>
      <description>OFT allows requirement tracing via the command line.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>command-line-interface</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
        <coveredType>
          <id>requirement-tracing</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>cli.tracing.output-format</id>
      <version>1</version>
      <shortdesc>Tracing Output Format</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>581</sourceline>
      <description>Users can select one of the following requirement tracing output formats (aka. "report formats"):

* Plain text</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>command-line-interface</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
        <coveredType>
          <id>requirement-tracing</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>cli.tracing.default-output-format</id>
      <version>1</version>
      <shortdesc>Default Tracing Output Format</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>595</sourceline>
      <description>OFT uses plain text as requirement tracing output format if the user does not select one.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>command-line-interface</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
        <coveredType>
          <id>requirement-tracing</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>cli.tracing.exit-status</id>
      <version>1</version>
      <shortdesc>Tracing Exit Status</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>608</sourceline>
      <description>The return value of the OFT executable reflects the overall tracing result.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>requirement-tracing</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>cli.conversion.command</id>
      <version>1</version>
      <shortdesc>Requirement Conversion Command</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>621</sourceline>
      <description>OFT allows requirement tracing via the command line.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>command-line-interface</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
        <coveredType>
          <id>reqm2-export</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>cli.conversion.output-format</id>
      <version>1</version>
      <shortdesc>Conversion Output Format</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>633</sourceline>
      <description>Users can select one of the following conversion output formats (aka. "export formats"):

* ReqM2</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>command-line-interface</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
        <coveredType>
          <id>reqm2-export</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>cli.conversion.default-output-format</id>
      <version>1</version>
      <shortdesc>Default Conversion Output Format</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>647</sourceline>
      <description>OFT uses ReqM2 as default conversion format if the user does not select one.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>command-line-interface</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
        <coveredType>
          <id>reqm2-export</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>cli.input-selection</id>
      <version>1</version>
      <shortdesc>Input Selection</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>661</sourceline>
      <description>Users can select requirement sources as combinations of files and directories.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>command-line-interface</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>cli.input-directory-selection</id>
      <version>1</version>
      <shortdesc>Input Directory Selection</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>673</sourceline>
      <description>Users can select zero or more directories below which files and sub-directories are imported recursively.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>command-line-interface</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
        <coveredType>
          <id>markdown-import</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
        <coveredType>
          <id>reqm2-import</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>cli.default-input</id>
      <version>1</version>
      <shortdesc>Default Input</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>686</sourceline>
      <description>If users select neither files nor directories for input, OFT imports from the current working directory recursively.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>command-line-interface</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
        <coveredType>
          <id>markdown-import</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
        <coveredType>
          <id>reqm2-import</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>cli.newline-format</id>
      <version>1</version>
      <shortdesc>Newline Format</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>699</sourceline>
      <description>Users can choose between Unix-style and Windows-style newline encoding for outputs.</description>
      <rationale>When users work together in teams where the team members use different platforms, configuring the newline helps the team to set a common standard.</rationale>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>command-line-interface</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
        <coveredType>
          <id>reqm2-export</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
    <specobject>
      <id>cli.default-newline-format</id>
      <version>1</version>
      <shortdesc>Default Newline Format</shortdesc>
      <status>approved</status>
      <sourcefile>doc/system_requirements.md</sourcefile>
      <sourceline>716</sourceline>
      <description>Unless selected by the user, OFT uses the native newline format of the platform it runs on for outputs.</description>
      <coverage>
        <needscoverage>
          <needsobj>dsn</needsobj>
        </needscoverage>
        <shallowCoverageStatus>UNCOVERED</shallowCoverageStatus>
        <transitiveCoverageStatus>UNCOVERED</transitiveCoverageStatus>
        <coveringSpecObjects></coveringSpecObjects>
        <uncoveredTypes>
          <uncoveredType>dsn</uncoveredType>
        </uncoveredTypes>
      </coverage>
      <covering>
        <coveredType>
          <id>command-line-interface</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
        <coveredType>
          <id>reqm2-export</id>
          <version>1</version>
          <doctype>feat</doctype>
        </coveredType>
      </covering>
    </specobject>
  </specobjects>
</specdocument>